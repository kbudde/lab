apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    a8r.io/repository: git@github.com:kbudde/lab.git
  labels:
    app.kubernetes.io/instance: k8s-monitoring
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-agent-logs
    app.kubernetes.io/version: v0.37.3
    helm.sh/chart: grafana-agent-logs-0.27.1
  name: k8s-monitoring-grafana-agent-logs
  namespace: grafana-agent
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: k8s-monitoring
      app.kubernetes.io/name: grafana-agent-logs
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: k8s-monitoring
        app.kubernetes.io/name: grafana-agent-logs
    spec:
      containers:
        - args:
            - run
            - /etc/agent/config.river
            - --storage.path=/tmp/agent
            - --server.http.listen-addr=0.0.0.0:80
          env:
            - name: AGENT_MODE
              value: flow
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: docker.io/grafana/agent:v0.37.3
          imagePullPolicy: IfNotPresent
          name: grafana-agent
          ports:
            - containerPort: 80
              name: http-metrics
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 80
            initialDelaySeconds: 10
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /etc/agent
              name: config
            - mountPath: /var/log
              name: varlog
              readOnly: true
            - mountPath: /etc/grafana-agent-credentials
              name: grafana-agent-credentials
        - args:
            - --volume-dir=/etc/agent
            - --webhook-url=http://localhost:80/-/reload
          image: docker.io/jimmidyson/configmap-reload:v0.8.0
          name: config-reloader
          resources:
            requests:
              cpu: 1m
              memory: 5Mi
          volumeMounts:
            - mountPath: /etc/agent
              name: config
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: k8s-monitoring-grafana-agent-logs
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        - configMap:
            name: k8s-monitoring-grafana-agent-logs
          name: config
        - hostPath:
            path: /var/log
          name: varlog
        - name: grafana-agent-credentials
          secret:
            secretName: grafana-agent-credentials
